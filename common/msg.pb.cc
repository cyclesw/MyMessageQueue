// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#include "msg.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace rabbitMQ {

inline constexpr BasicProperties::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        routing_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        delivery_mode_{static_cast< ::rabbitMQ::DeliveryMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BasicProperties::BasicProperties(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BasicPropertiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BasicPropertiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BasicPropertiesDefaultTypeInternal() {}
  union {
    BasicProperties _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BasicPropertiesDefaultTypeInternal _BasicProperties_default_instance_;

inline constexpr Message_Payload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        valid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        properties_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Message_Payload::Message_Payload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message_PayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message_PayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message_PayloadDefaultTypeInternal() {}
  union {
    Message_Payload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message_PayloadDefaultTypeInternal _Message_Payload_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payload_{nullptr},
        offset_{0u},
        length_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace rabbitMQ
static ::_pb::Metadata file_level_metadata_msg_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_msg_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_msg_2eproto = nullptr;
const ::uint32_t TableStruct_msg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::BasicProperties, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::BasicProperties, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::BasicProperties, _impl_.delivery_mode_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::BasicProperties, _impl_.routing_key_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message_Payload, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message_Payload, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message_Payload, _impl_.properties_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message_Payload, _impl_.body_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message_Payload, _impl_.valid_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::rabbitMQ::Message, _impl_.length_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::rabbitMQ::BasicProperties)},
        {11, 22, -1, sizeof(::rabbitMQ::Message_Payload)},
        {25, 36, -1, sizeof(::rabbitMQ::Message)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::rabbitMQ::_BasicProperties_default_instance_._instance,
    &::rabbitMQ::_Message_Payload_default_instance_._instance,
    &::rabbitMQ::_Message_default_instance_._instance,
};
const char descriptor_table_protodef_msg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\tmsg.proto\022\010rabbitMQ\"a\n\017BasicProperties"
    "\022\n\n\002id\030\001 \001(\t\022-\n\rdelivery_mode\030\002 \001(\0162\026.ra"
    "bbitMQ.DeliveryMode\022\023\n\013routing_key\030\003 \001(\t"
    "\"\254\001\n\007Message\022*\n\007payload\030\001 \001(\0132\031.rabbitMQ"
    ".Message.Payload\022\016\n\006offset\030\002 \001(\r\022\016\n\006leng"
    "th\030\003 \001(\r\032U\n\007Payload\022-\n\nproperties\030\001 \001(\0132"
    "\031.rabbitMQ.BasicProperties\022\014\n\004body\030\002 \001(\t"
    "\022\r\n\005valid\030\003 \001(\t*A\n\014ExchangeType\022\016\n\nUNKOW"
    "NTYPE\020\000\022\n\n\006DIRECT\020\001\022\n\n\006FANOUT\020\002\022\t\n\005TOPIC"
    "\020\003*:\n\014DeliveryMode\022\016\n\nUNKOWNMODE\020\000\022\r\n\tUN"
    "DURABLE\020\001\022\013\n\007DURABLE\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_msg_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msg_2eproto = {
    false,
    false,
    430,
    descriptor_table_protodef_msg_2eproto,
    "msg.proto",
    &descriptor_table_msg_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_msg_2eproto::offsets,
    file_level_metadata_msg_2eproto,
    file_level_enum_descriptors_msg_2eproto,
    file_level_service_descriptors_msg_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_2eproto_getter() {
  return &descriptor_table_msg_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_2eproto(&descriptor_table_msg_2eproto);
namespace rabbitMQ {
const ::google::protobuf::EnumDescriptor* ExchangeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_msg_2eproto);
  return file_level_enum_descriptors_msg_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ExchangeType_internal_data_[] = {
    262144u, 0u, };
bool ExchangeType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* DeliveryMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_msg_2eproto);
  return file_level_enum_descriptors_msg_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t DeliveryMode_internal_data_[] = {
    196608u, 0u, };
bool DeliveryMode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class BasicProperties::_Internal {
 public:
};

BasicProperties::BasicProperties(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rabbitMQ.BasicProperties)
}
inline PROTOBUF_NDEBUG_INLINE BasicProperties::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_(arena, from.id_),
        routing_key_(arena, from.routing_key_),
        _cached_size_{0} {}

BasicProperties::BasicProperties(
    ::google::protobuf::Arena* arena,
    const BasicProperties& from)
    : ::google::protobuf::Message(arena) {
  BasicProperties* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.delivery_mode_ = from._impl_.delivery_mode_;

  // @@protoc_insertion_point(copy_constructor:rabbitMQ.BasicProperties)
}
inline PROTOBUF_NDEBUG_INLINE BasicProperties::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        routing_key_(arena),
        _cached_size_{0} {}

inline void BasicProperties::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.delivery_mode_ = {};
}
BasicProperties::~BasicProperties() {
  // @@protoc_insertion_point(destructor:rabbitMQ.BasicProperties)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BasicProperties::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.routing_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BasicProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:rabbitMQ.BasicProperties)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.routing_key_.ClearToEmpty();
  _impl_.delivery_mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BasicProperties::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 46, 2> BasicProperties::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BasicProperties_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BasicProperties, _impl_.id_)}},
    // .rabbitMQ.DeliveryMode delivery_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BasicProperties, _impl_.delivery_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BasicProperties, _impl_.delivery_mode_)}},
    // string routing_key = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BasicProperties, _impl_.routing_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(BasicProperties, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rabbitMQ.DeliveryMode delivery_mode = 2;
    {PROTOBUF_FIELD_OFFSET(BasicProperties, _impl_.delivery_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string routing_key = 3;
    {PROTOBUF_FIELD_OFFSET(BasicProperties, _impl_.routing_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\2\0\13\0\0\0\0"
    "rabbitMQ.BasicProperties"
    "id"
    "routing_key"
  }},
};

::uint8_t* BasicProperties::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rabbitMQ.BasicProperties)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rabbitMQ.BasicProperties.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .rabbitMQ.DeliveryMode delivery_mode = 2;
  if (this->_internal_delivery_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_delivery_mode(), target);
  }

  // string routing_key = 3;
  if (!this->_internal_routing_key().empty()) {
    const std::string& _s = this->_internal_routing_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rabbitMQ.BasicProperties.routing_key");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rabbitMQ.BasicProperties)
  return target;
}

::size_t BasicProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rabbitMQ.BasicProperties)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string routing_key = 3;
  if (!this->_internal_routing_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_routing_key());
  }

  // .rabbitMQ.DeliveryMode delivery_mode = 2;
  if (this->_internal_delivery_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_delivery_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BasicProperties::_class_data_ = {
    BasicProperties::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BasicProperties::GetClassData() const {
  return &_class_data_;
}

void BasicProperties::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BasicProperties*>(&to_msg);
  auto& from = static_cast<const BasicProperties&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rabbitMQ.BasicProperties)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_routing_key().empty()) {
    _this->_internal_set_routing_key(from._internal_routing_key());
  }
  if (from._internal_delivery_mode() != 0) {
    _this->_internal_set_delivery_mode(from._internal_delivery_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BasicProperties::CopyFrom(const BasicProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rabbitMQ.BasicProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BasicProperties::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BasicProperties::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BasicProperties::InternalSwap(BasicProperties* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.routing_key_, &other->_impl_.routing_key_, arena);
  swap(_impl_.delivery_mode_, other->_impl_.delivery_mode_);
}

::google::protobuf::Metadata BasicProperties::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_2eproto_getter, &descriptor_table_msg_2eproto_once,
      file_level_metadata_msg_2eproto[0]);
}
// ===================================================================

class Message_Payload::_Internal {
 public:
  using HasBits = decltype(std::declval<Message_Payload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_._has_bits_);
  static const ::rabbitMQ::BasicProperties& properties(const Message_Payload* msg);
  static void set_has_properties(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::rabbitMQ::BasicProperties& Message_Payload::_Internal::properties(const Message_Payload* msg) {
  return *msg->_impl_.properties_;
}
Message_Payload::Message_Payload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rabbitMQ.Message.Payload)
}
inline PROTOBUF_NDEBUG_INLINE Message_Payload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        body_(arena, from.body_),
        valid_(arena, from.valid_) {}

Message_Payload::Message_Payload(
    ::google::protobuf::Arena* arena,
    const Message_Payload& from)
    : ::google::protobuf::Message(arena) {
  Message_Payload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.properties_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::rabbitMQ::BasicProperties>(arena, *from._impl_.properties_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:rabbitMQ.Message.Payload)
}
inline PROTOBUF_NDEBUG_INLINE Message_Payload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        body_(arena),
        valid_(arena) {}

inline void Message_Payload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.properties_ = {};
}
Message_Payload::~Message_Payload() {
  // @@protoc_insertion_point(destructor:rabbitMQ.Message.Payload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message_Payload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.body_.Destroy();
  _impl_.valid_.Destroy();
  delete _impl_.properties_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Message_Payload::Clear() {
// @@protoc_insertion_point(message_clear_start:rabbitMQ.Message.Payload)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.body_.ClearToEmpty();
  _impl_.valid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.properties_ != nullptr);
    _impl_.properties_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message_Payload::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 42, 2> Message_Payload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message_Payload_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .rabbitMQ.BasicProperties properties = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_.properties_)}},
    // string body = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_.body_)}},
    // string valid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_.valid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .rabbitMQ.BasicProperties properties = 1;
    {PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_.properties_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string body = 2;
    {PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_.body_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string valid = 3;
    {PROTOBUF_FIELD_OFFSET(Message_Payload, _impl_.valid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rabbitMQ::BasicProperties>()},
  }}, {{
    "\30\0\4\5\0\0\0\0"
    "rabbitMQ.Message.Payload"
    "body"
    "valid"
  }},
};

::uint8_t* Message_Payload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rabbitMQ.Message.Payload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .rabbitMQ.BasicProperties properties = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::properties(this),
        _Internal::properties(this).GetCachedSize(), target, stream);
  }

  // string body = 2;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rabbitMQ.Message.Payload.body");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string valid = 3;
  if (!this->_internal_valid().empty()) {
    const std::string& _s = this->_internal_valid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rabbitMQ.Message.Payload.valid");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rabbitMQ.Message.Payload)
  return target;
}

::size_t Message_Payload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rabbitMQ.Message.Payload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string body = 2;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_body());
  }

  // string valid = 3;
  if (!this->_internal_valid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_valid());
  }

  // .rabbitMQ.BasicProperties properties = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.properties_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Message_Payload::_class_data_ = {
    Message_Payload::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Message_Payload::GetClassData() const {
  return &_class_data_;
}

void Message_Payload::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Message_Payload*>(&to_msg);
  auto& from = static_cast<const Message_Payload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rabbitMQ.Message.Payload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (!from._internal_valid().empty()) {
    _this->_internal_set_valid(from._internal_valid());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_properties()->::rabbitMQ::BasicProperties::MergeFrom(
        from._internal_properties());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message_Payload::CopyFrom(const Message_Payload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rabbitMQ.Message.Payload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message_Payload::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Message_Payload::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Message_Payload::InternalSwap(Message_Payload* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.valid_, &other->_impl_.valid_, arena);
  swap(_impl_.properties_, other->_impl_.properties_);
}

::google::protobuf::Metadata Message_Payload::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_2eproto_getter, &descriptor_table_msg_2eproto_once,
      file_level_metadata_msg_2eproto[1]);
}
// ===================================================================

class Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_);
  static const ::rabbitMQ::Message_Payload& payload(const Message* msg);
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::rabbitMQ::Message_Payload& Message::_Internal::payload(const Message* msg) {
  return *msg->_impl_.payload_;
}
Message::Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rabbitMQ.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
    : ::google::protobuf::Message(arena) {
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.payload_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::rabbitMQ::Message_Payload>(arena, *from._impl_.payload_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, length_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::length_));

  // @@protoc_insertion_point(copy_constructor:rabbitMQ.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, payload_),
           0,
           offsetof(Impl_, length_) -
               offsetof(Impl_, payload_) +
               sizeof(Impl_::length_));
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:rabbitMQ.Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.payload_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:rabbitMQ.Message)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.payload_ != nullptr);
    _impl_.payload_->Clear();
  }
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.length_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.length_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .rabbitMQ.Message.Payload payload = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_)}},
    // uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.offset_)}},
    // uint32 length = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.length_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .rabbitMQ.Message.Payload payload = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.offset_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 length = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rabbitMQ::Message_Payload>()},
  }}, {{
  }},
};

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rabbitMQ.Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .rabbitMQ.Message.Payload payload = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  // uint32 offset = 2;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // uint32 length = 3;
  if (this->_internal_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rabbitMQ.Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rabbitMQ.Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .rabbitMQ.Message.Payload payload = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_);
  }

  // uint32 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_offset());
  }

  // uint32 length = 3;
  if (this->_internal_length() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_length());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Message::_class_data_ = {
    Message::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Message::GetClassData() const {
  return &_class_data_;
}

void Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rabbitMQ.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_payload()->::rabbitMQ::Message_Payload::MergeFrom(
        from._internal_payload());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_length() != 0) {
    _this->_internal_set_length(from._internal_length());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rabbitMQ.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Message::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.length_)
      + sizeof(Message::_impl_.length_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_)>(
          reinterpret_cast<char*>(&_impl_.payload_),
          reinterpret_cast<char*>(&other->_impl_.payload_));
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_2eproto_getter, &descriptor_table_msg_2eproto_once,
      file_level_metadata_msg_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rabbitMQ
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
